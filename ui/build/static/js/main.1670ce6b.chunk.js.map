{"version":3,"sources":["components/code-pane.js","components/build_strategy.js","utils/JWTAuth.js","components/dashboard/Landingpage.js","components/signing/CreateNewAccount.js","components/signing/LoginForm.js","App.js","serviceWorker.js","index.js","assets/img/chart.png","assets/img/market trickks-01.svg","assets/img/hand icon.svg","assets/img/prices.svg","assets/img/wallet.svg"],"names":["Modal","setAppElement","CodePane","Build_strategy","SERVER_URL","login","data","a","LOGIN_ENDPOINT","axios","post","response","status","jwt","expireAt","expire_at","console","log","localStorage","setItem","alert","register","SIGNUP_ENDPOINT","Landingpage","props","useState","faqs","className","style","href","src","graph_logo","width","height","onClick","openModal","chartImage","alt","handicon","prices","wallet","Component","LoginForm","email","setEmail","password","setPassword","cpassword","setCPassword","mode","setMode","equalMsg","setEqualMsg","errMsg","setErrMsg","fname","setFname","lname","setLname","sign_in","info","result","sign_up","first_name","last_name","success","useEffect","compare_password","show","showModal","onHide","onClose","onSubmit","Header","Body","type","data-dismiss","aria-hidden","htmlFor","name","id","placeholder","onChange","e","target","value","required","preventDefault","Footer","Button","App","setShowModal","fontFamily","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1670ce6b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState} from \"react\";\r\n\r\nimport \"../index.css\";\r\n\r\nimport Editor from \"@monaco-editor/react\";\r\nimport Modal from \"react-modal\";\r\nimport {save_file, run_script, stop_script} from \"../utils/apis\";\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction CodePane(props) {\r\n  \r\n  const defaultCode = `import logging\\nlogging.disable(logging.DEBUG)\\n\\nimport datetime  \\nimport backtrader as bt\\nfrom angelbt import ANGELStore\\nfrom datetime import datetime, timedelta\\nfrom angelbt import ZerodhaFeed\\nclass VolumeWeightedAveragePrice(bt.Indicator):\\n    plotinfo = dict(subplot=False)\\n    alias = ('VWAP', 'VolumeWeightedAveragePrice',)\\n    lines = ('vwap','cumvol','typprice','ct')\\n    plotlines = dict(VWAP=dict(alpha=0.50, linestyle='-.', linewidth=2.0))\\n\\n    def __init__(self):\\n        # cumvol = bt.ind.SumN(self.data.volume, period = self.p.period)\\n        # typprice = ((self.data.close + self.data.high + self.data.low)/3) * self.data.volume\\n        # cumtypprice = bt.ind.SumN(typprice, period=self.p.period)\\n        # self.lines[0] = cumtypprice / cumvol\\n        super(VolumeWeightedAveragePrice, self).__init__()\\n    def next(self):\\n        \\n        if self.data.datetime.date(0) != self.data.datetime.date(-1):\\n            self.typprice[0]=((self.data.close[0] + self.data.high[0] + self.data.low[0])/3) * self.data.volume[0]\\n            self.cumvol[0] = self.data.volume[0]\\n            self.ct[0] =1\\n        else:\\n            self.typprice[0]=self.typprice[-1]+((self.data.close[0] + self.data.high[0] + self.data.low[0])/3) * self.data.volume[0]\\n            self.cumvol[0] = self.cumvol[-1]+self.data.volume[0]\\n            self.ct[0] =self.ct[-1]+1\\n        if  self.cumvol[0]>0:\\n            self.lines[0][0] = self.typprice[0]/self.cumvol[0]\\n        else: \\n            self.lines[0][0] = 0\\n\\nclass OptionStrategyEma(bt.Strategy):\\n    \\n    params = dict(\\n        pRsi = 14,\\n        pRsiLevel = 60,\\n        pSma = 20,\\n        stop_loss=10,\\n        pRr =3,\\n        pSmaSL=10,\\n        multiple = 2,\\n        volumerate=1.5,\\n        initsize = 1\\n    )\\n    lines = ('vwap',)\\n    def __init__(self):\\n        self.countloss = 0\\n        self.rsi = bt.indicators.RelativeStrengthIndex(period=self.p.pRsi)\\n        self.sma20Oi = bt.ind.SMA(self.datas[0].oi,period=self.p.pSma, plot=True,subplot=True)\\n        self.sma20Volume= bt.ind.SMA(self.datas[0].volume,period=self.p.pSma, plot=False)\\n        self.vwap =  VolumeWeightedAveragePrice()\\n        self.openi = self.datas[0].oi\\n        self.smalow = bt.ind.SMA(self.datas[0].low,period=self.p.pSmaSL, plot=True)\\n        self.backtest = False\\n        self.bought = False\\n        self.order = None\\n\\n    def log(self, txt, dt=None):\\n        ''' Logging function for this strategy'''\\n        dt = dt or self.datas[0].datetime.date(0)\\n        logging.info('%s, %s' % (dt.isoformat(), txt))\\n\\n    def notify_order(self, order):\\n        #Check if order has been completed\\n        if order.status in [order.Completed]:\\n            if order.isbuy(): # Long\\n                self.log(\\n                    'LONG EXECUTED Ref: %d,Size %.4f, Price: %.4f, Cost: %.2f, Comm: %.2f' %\\n                    (order.ref,\\n                     order.executed.size,\\n                     order.executed.price,\\n                     order.executed.value,\\n                     order.executed.comm)\\n                    )\\n                \\n                self.buy_price = order.executed.price\\n                self.buy_comm = order.executed.comm\\n                \\n            else: # Short\\n                self.log(\\n                    'SHORT EXECUTED Ref: %d, Size %.4f, Price: %.4f, Cost: %.2f, Comm: %.2f' %\\n                    (order.ref,\\n                     order.executed.size,\\n                     order.executed.price,\\n                     order.executed.value,\\n                     order.executed.comm)\\n                    )\\n                \\n                self.sell_price = order.executed.price\\n                self.sell_comm = order.executed.comm\\n                self.bought = False\\n                # Clean up the order list.\\n                #self.cancel(self.stop_order)\\n                #self.cancel(self.tp_order)\\n  \\n        elif order.status in [order.Canceled, order.Margin, order.Rejected]:\\n            self.log('Ref %03d : SL/TP Order Canceled/Margin/Rejected'\\n                     % (order.ref))\\n\\n    def notify_trade(self, trade):\\n        if trade.justopened:\\n            self.log('Trade Opened  - Size {%.4f} @Price {%.4f}'\\n                    %(trade.size, trade.price))\\n        elif trade.isclosed:\\n            if(trade.pnlcomm>0):\\n                self.countloss = 0\\n            else:\\n                self.countloss = self.countloss +1\\n            self.log('Trade Closed  - Profit {%.4f}' % (trade.pnlcomm))\\n\\n        else:  # trade updated\\n            self.log('Trade Updated - Size %.4f @Price {%.4f}' % (trade.size, trade.price))    \\n    \\n    def notify_data(self, data, status, *args, **kwargs):\\n        dn = data._name\\n        dt = datetime.now()\\n        msg = 'Data Status: {}, Order Status: {}'.format(data._getstatusname(status), status)\\n        #print(dt, dn, msg)\\n        logging.info(msg)\\n        if data._getstatusname(status) == 'LIVE':\\n            self.live_data = True\\n        else:\\n            self.live_data = False\\n\\n    def next(self):\\n        # 14rsi(option price) > 60  => 14 ?\\n        #  option price > 14 vwap  => 14 ? \\n        #  20sma(open interest)>open interest => 20 ? \\n        #  volume>20sma(volume) => 20 ?\\n        # sl is privious vwap-10\\n        if self.live_data:\\n            cash, value = self.broker.get_balance()\\n        else:\\n            cash = 'NA'\\n        for data in self.datas:\\n            if(self.live_data):\\n                self.log('{} - {} | Cash {} | O: {} H: {} L: {} C: {} V:{}  OI:{} SMAVOLUME:{} SMALOW:{} RSI:{} VWAP:{} SMAOI:{}'.format( \\\\\\n                    data.datetime.datetime(),data._name, cash, \\\\\\n                    data.open[0], data.high[0], data.low[0], data.close[0], data.volume[0],data.oi[0], \\\\\\n                    self.sma20Volume[0],self.smalow[0],self.rsi[0],self.vwap[0],self.sma20Oi[0]))\\n            else:\\n                if self.backtest == False:\\n                    self.log(data.datetime.datetime())\\n        self.buysignal  = self.vwap[0]>0 and self.rsi[0]>self.p.pRsiLevel \\\\\\n            and self.datas[0].close[0]>self.vwap[0] \\\\\\n            and self.sma20Oi[0] > self.datas[0].oi[0] \\\\\\n            and self.datas[0].volume[0]>self.sma20Volume[0] * self.p.volumerate\\n        if (self.live_data or self.backtest) and not self.bought:\\n            if self.buysignal:  # if fast crosses slow to the upside\\n                lotsize = self.p.initsize*pow(self.p.multiple,self.countloss)\\n                self.order = self.buy(size=lotsize)  # enter long\\n                self.bought = True\\n                \\n        if self.bought :\\n            if(self.datas[0].close[0]<self.smalow[0]):\\n                lotsize = self.p.initsize*pow(self.p.multiple,self.countloss)\\n                self.sell_order = self.sell(size=lotsize)  # enter short\\n\\n\\n\\ncerebro = bt.Cerebro(quicknotify=True) \\ncerebro.addstrategy(OptionStrategyEma)  # Add the trading strategy\\nconfig = {'api_key':\\\"pCNKyY2s\\\",\\n        'client_id':\\\"P193991\\\",\\n        'client_pw':\\\"mapatel123\\\"\\n        }\\n\\nbacktest = False\\nif backtest == False:\\n    store = ANGELStore(config=config,retries=5)\\n    broker = store.getbroker()\\n    cerebro.setbroker(broker)\\n    hist_start_date = datetime.utcnow() - timedelta(minutes=60*24*3)\\n    data = store.getdata(dataname='NIFTY21NOV18000PE', name=\\\"NIFTY21NOV18000PE\\\",\\n                        timeframe=bt.TimeFrame.Minutes, fromdate=hist_start_date,\\n                        compression=5)\\n    cerebro.adddata(data)\\n\\nif backtest :\\n    cerebro.broker.setcash(100000.0)\\n    cerebro.adddata(ZerodhaFeed(\\n                                dataname='NIFTY21NOV18000PE', name=\\\"NIFTY21NOV18000PE\\\",\\n                                timeframe=bt.TimeFrame.Minutes,compression=5,\\n                                fromdate=datetime(2021, 11,3, 0, 0),\\n                                todate=datetime(2021, 11, 12, 0, 0),\\n                                config=config))\\ncerebro.run()  # run it all\\nif backtest :\\n    cerebro.plot(path = 'savefig.png',width=16, height=9,dpi=100) #cerebro.plot()  # and plot it with a single command\\n\\n`;\r\n  const editorRef = useRef(null);\r\n  const [filename, setFilename] = useState('');\r\n  const [runningTimer, setRunningTimer] = useState(0);\r\n  const [timer, setTimer] = useState(0);\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    if (timer > 0) {\r\n      setTimeout(() => setRunningTimer(runningTimer + 1), 1000);\r\n    } else {\r\n      setRunningTimer(0)\r\n    } \r\n  });\r\n\r\n  const startTest = async () => {\r\n    setTimer(setInterval(setRunningTimer(runningTimer+1), 1000));\r\n  };\r\n  \r\n  function toggleModal() {\r\n    props.setOpenModal(!props.openModal);\r\n  }\r\n\r\n  function handleEditorDidMount(editor, monaco) {\r\n    editorRef.current = editor; \r\n  }\r\n  \r\n  function open_modal() {\r\n    props.setOpenModal(true);\r\n  }\r\n\r\n  const saveFile = async () => {\r\n\r\n    if (filename == '') {\r\n      alert('Filename must be entered!');\r\n      return\r\n    }\r\n    \r\n    var names = filename.split('.py');\r\n    var data = {\r\n      content: editorRef.current.getValue(),\r\n      file: names[0]\r\n    }\r\n    \r\n    props.setShownName(names[0]+'.py')\r\n    if (props.openModal) { toggleModal() }\r\n\r\n    props.setLoading(true);\r\n    document.querySelector('#btn-code-save').innerHTML = 'Saving...';\r\n    document.querySelector('#btn-code-save').setAttribute(\"disabled\", \"disabled\");\r\n    document.querySelector('#btn-code-test').setAttribute(\"disabled\", \"disabled\");\r\n    \r\n    await save_file(data);\r\n    \r\n    document.querySelector('#btn-code-save').removeAttribute(\"disabled\");\r\n    document.querySelector('#btn-code-test').removeAttribute(\"disabled\");\r\n    document.querySelector('#btn-code-save').innerHTML = 'Save';\r\n    props.setLoading(false);\r\n\r\n  }\r\n\r\n  const testValue = async () => {\r\n    props.setLogs('');\r\n    props.setCreatedImg64('');\r\n\r\n    // await saveFile();\r\n    \r\n    var names = filename.split('.py');\r\n    var data = {\r\n      content: editorRef.current.getValue(),\r\n      file: names[0],\r\n      type: 'start_test'\r\n    }\r\n    \r\n    props.setLoading(true);\r\n    document.querySelector('#btn-code-save').setAttribute(\"disabled\", \"disabled\");\r\n    document.querySelector('#btn-code-test').style.display = 'none';\r\n    document.querySelector('#btn-code-stop').style.display = 'block';\r\n    startTest();\r\n    \r\n    var result = await run_script(data);\r\n\r\n    document.querySelector('#btn-code-save').removeAttribute(\"disabled\");\r\n    document.querySelector('#btn-code-test').style.display = 'block';\r\n    document.querySelector('#btn-code-stop').style.display = 'none';\r\n    props.setLoading(false);\r\n\r\n    setTimer(0);\r\n    setRunningTimer(0);\r\n\r\n    props.setResultOfBackTest(result);\r\n  }\r\n\r\n  const stopTest = async () => {\r\n\r\n    props.setLogs('');\r\n    props.setCreatedImg64('');\r\n\r\n    var names = filename.split('.py');\r\n    var data = {\r\n      content: editorRef.current.getValue(),\r\n      file: names[0],\r\n      type: 'stop_test'\r\n    }\r\n    \r\n    stop_script(data);\r\n    \r\n    // document.querySelector('#btn-code-test').style.display = 'block';\r\n    // document.querySelector('#btn-code-stop').style.display = 'none';\r\n    // props.setLoading(false);\r\n\r\n    // setTimer(0);\r\n    // setRunningTimer(0);\r\n  }\r\n\r\n  return (\r\n   <>\r\n      <Modal\r\n        isOpen={props.openModal}\r\n        onRequestClose={toggleModal}\r\n        contentLabel=\"My dialog\"\r\n        className=\"mymodal\"\r\n        // style={customStyles}\r\n        overlayClassName=\"myoverlay\"\r\n        closeTimeoutMS={500}\r\n      >\r\n        <div className=\"mb-1\" name=\"modal-title\">Enter File Name.</div>\r\n        <input type=\"text\" name=\"filename\" value={filename} onChange={(e) => setFilename(e.target.value)} className=\"w-100 mb-3\"/>\r\n        <button onClick={toggleModal} className=\"btn btn-dark mb-1 float-right\">Cancel</button>\r\n        <button onClick={saveFile} className=\"btn btn-info mb-1 mr-2 float-right\">Save</button>\r\n      </Modal>\r\n     <Editor\r\n       height=\"40vh\"\r\n       defaultLanguage=\"python\"\r\n       defaultValue={defaultCode}\r\n       onMount={handleEditorDidMount}\r\n       theme= 'vs-dark'\r\n     />\r\n     <button className=\"btn btn-sm btn-danger mt-1 float-right\" id=\"btn-code-test\" onClick={filename==''?open_modal:testValue}>\r\n       <i className=\"bi bi-play-fill\" style={{\"color\":\"#ffffff\"}}></i> BackTest \r\n     </button>\r\n     <button className=\"btn btn-sm btn-danger mt-1 float-right\" id=\"btn-code-stop\" onClick={stopTest}>\r\n       <i className=\"bi bi-stop-fill\" style={{\"color\":\"#36D7B7\"}}></i> Testing... {runningTimer}s\r\n     </button>\r\n     <button href=\"#\" role=\"button\" className=\"btn btn-sm btn-info mt-1 mr-2 float-right\" id=\"btn-code-save\" onClick={filename==''?open_modal:saveFile}>Save</button>\r\n      \r\n   </>\r\n  );\r\n}\r\n\r\n\r\nexport default CodePane;","import React, {createElement, useState} from 'react';\r\n// import logo from './logo.svg';\r\nimport Portfolio from './Portfolio'\r\nimport CodePane from './code-pane';\r\nimport {FadeLoader} from \"react-spinners\";\r\n// import './App.css';\r\nimport chartImg from '../assets/img/chart.png';\r\n\r\nfunction Build_strategy() {\r\n  let [loading, setLoading] = useState(false);\r\n  let [color, setColor] = useState(\"#36D7B7\");\r\n\r\n  const [logs, setLogs] = useState('');\r\n  const [createdImg64, setCreatedImg64] = useState('');\r\n  const [shownName, setShownName] = useState('unnamed');\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const showEditPencil = (filename) => {\r\n    setShownName(filename);\r\n  }\r\n\r\n  const setResultOfBackTest = (resultData) => {\r\n\r\n    setLogs(resultData[\"output\"]);\r\n    if (resultData['is_chart']) {\r\n      setCreatedImg64(resultData[\"imgdata\"]);\r\n      document.querySelector('ul > li > a#console-tab').setAttribute('class', 'nav-link');\r\n      document.querySelector('ul > li > a#chart-tab').setAttribute('class', 'nav-link active');\r\n      document.querySelector('div#console').setAttribute('class', 'tab-pane fade');\r\n      document.querySelector('div#chart').setAttribute('class', 'tab-pane fade show active');\r\n    } else {\r\n      document.querySelector('ul > li > a#chart-tab').setAttribute('class', 'nav-link');\r\n      document.querySelector('ul > li > a#console-tab').setAttribute('class', 'nav-link active');\r\n      document.querySelector('div#chart').setAttribute('class', 'tab-pane fade');\r\n      document.querySelector('div#console').setAttribute('class', 'tab-pane fade show active');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper d-flex align-items-stretch\">\r\n      <nav id=\"sidebar\">\r\n        <div className=\"p-4 pt-5\">\r\n          {/* <a href=\"#\" className=\"img logo rounded-circle mb-5\" style={{backgroundImage: 'url(./assets/img/logo.jpg)'}}>ALGO LOGO</a> */}\r\n          <a href=\"#\" className=\"img logo rounded-circle mb-5\" >ALGO LOGO</a>\r\n          <ul className=\"list-unstyled components mb-5\">\r\n            <li>\r\n              <a href=\"#\">Strategies</a>\r\n              {/* <a href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Strategies</a>\r\n              <ul className=\"collapse list-unstyled\" id=\"homeSubmenu\">\r\n                <li>\r\n                    <a href=\"#\">Home 1</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Home 2</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Home 3</a>\r\n                </li>\r\n              </ul> */}\r\n            </li>\r\n            <li className=\"active\">\r\n                <a href=\"#\">Build Strategy</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">My Trading</a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"footer\">\r\n            <p>\r\n              {/* <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --> */}\r\n              Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i className=\"icon-heart\" aria-hidden=\"true\"></i> by <a href=\"#\" target=\"_blank\">algo@algo.com</a>\r\n              {/* <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --> */}\r\n            </p>\r\n          </div>\r\n\r\n        </div>\r\n      </nav>\r\n\r\n      <div id=\"content\" className=\"container p-2 p-md-3\">\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n\r\n            <button type=\"button\" id=\"sidebarCollapse\" className=\"btn btn-sm btn-primary\">\r\n              <i className=\"fa fa-bars\"></i>\r\n            </button>\r\n            <h4 className=\"ml-2\">Build Strategy</h4>\r\n            <button className=\"btn btn-dark d-inline-block d-lg-none ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <i className=\"fa fa-bars\"></i>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"nav navbar-nav ml-auto\">\r\n                <li className=\"nav-item active\">\r\n                    {/* <a href=\"#\" className=\"img logo rounded-circle\" style={{backgroundImage: 'url(./assets/img/logo.jpg)'}}></a> */}\r\n                    <a className=\"nav-link\" href=\"#\">Alexandr</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#\">About</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#\">Portfolio</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#\">Contact</a>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n          \r\n        <div className=\"mt-4 p-1\">\r\n          <span className=\"btn btn-sm btn-light mb-1 p-0 ml-3\" style={{margin:\"0px 0px\", cursor:\"pointer\"}} onClick={()=>{setOpenModal(true)}}><b><i><span name=\"shownName\" id=\"shown-name\">{shownName}</span></i></b> script</span>\r\n          \r\n          <div>\r\n            <CodePane \r\n              setResultOfBackTest={setResultOfBackTest} \r\n              setShownName = {showEditPencil}\r\n              openModal = {openModal}\r\n              setOpenModal = {setOpenModal}\r\n              loading = {loading}\r\n              setLoading = {setLoading}\r\n              setLogs = {setLogs}\r\n              setCreatedImg64 = {setCreatedImg64}\r\n            />\r\n          </div>\r\n          <div className=\"sweet-loading text-center\">\r\n            <FadeLoader color={color} loading={loading} height={20} width={10} radius={10} margin={10} />\r\n          </div>\r\n        </div>\r\n                \r\n        <div className=\"mt-4 p-1\">\r\n          <p className=\"test-result ml-4 mb-1\"><b>BackTest Result</b></p>\r\n\r\n          <ul className=\"nav nav-tabs\" id=\"tabTestResult\" role=\"tablist\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" id=\"chart-tab\" data-toggle=\"tab\" href=\"#chart\" role=\"tab\" aria-controls=\"chart\" aria-selected=\"true\">Chart</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" id=\"console-tab\" data-toggle=\"tab\" href=\"#console\" role=\"tab\" aria-controls=\"console\" aria-selected=\"false\">Console</a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"tab-content\" id=\"testResultContent\">\r\n\r\n            <div className=\"tab-pane fade show active\" id=\"chart\" role=\"tabpanel\" aria-labelledby=\"chart-tab\">\r\n              <div className=\"container text-center pt-2\" style={{foreGroundColor:\"lightgray\"}}>\r\n                <img className=\"text-center p-5\" src={`data:image/png;base64,${createdImg64}`} style={{width:'100%'}} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"console\" role=\"tabpanel\" aria-labelledby=\"console-tab\">\r\n              <div className=\"container text-center pt-2\">\r\n                <textarea readOnly={true} style={{width:\"100%\", height:\"30vh\", border:\"none\", backgroundColor:\"lightgray\", overflow:\"scroll\", fontSize:\"80%\"}} defaultValue={logs}></textarea>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Build_strategy;\r\n","import axios from 'axios';\r\n// const SERVER_URL = \"http://127.0.0.1:443\";\r\nconst SERVER_URL = \"http://ec2-18-189-143-46.us-east-2.compute.amazonaws.com:443\";\r\n\r\nconst login = async (data) => {\r\n    const LOGIN_ENDPOINT = `${SERVER_URL}/api/login.php`;\r\n\r\n    try {\r\n        let response = await axios.post(LOGIN_ENDPOINT, data);\r\n\r\n        if(response.status === 200 && response.data.jwt && response.data.expireAt){\r\n\r\n            let jwt = response.data.jwt;\r\n            let expire_at = response.data.expireAt;\r\n            console.log(jwt, expire_at);\r\n            \r\n            localStorage.setItem(\"access_token\", jwt);\r\n            localStorage.setItem(\"expire_at\", expire_at);\r\n\r\n            return response.data;\r\n        }\r\n\r\n    } catch(e){\r\n        alert('network connection error');\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nconst register = async (data) => {\r\n    const SIGNUP_ENDPOINT = `${SERVER_URL}/api/register.php`;\r\n    try {\r\n        let response = await axios.post(SIGNUP_ENDPOINT, data);\r\n\r\n        if(response.status === 200){\r\n            console.log(\"Registered user Successfully!\")\r\n        }\r\n        \r\n        return response.data;\r\n    } catch(e){\r\n        alert ('network connection error')\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"expire_at\");\r\n}\r\n\r\n\r\nexport { login, register, logout }","import React, {useState} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { faqs } from \"./faqs.json\";\r\n\r\nimport './landingpage.css';\r\n\r\nimport chartImage from \"../../assets/img/chart.png\";\r\nimport graph_logo from \"../../assets/img/market trickks-01.svg\";\r\nimport handicon from \"../../assets/img/hand icon.svg\";\r\nimport prices from \"../../assets/img/prices.svg\";\r\nimport wallet from \"../../assets/img/wallet.svg\";\r\n\r\n\r\nfunction Landingpage(props){\r\n  const [faq, setFaq] = useState(faqs[0]);\r\n  \r\n  const handleSignup = (username, email, password) => {};\r\n  const handleLogin = (username, password) => {}\r\n \r\n   return(\r\n      <div className=\"landing-page\">\r\n         <nav className=\"nav mt-3\">\r\n            <div className=\"content col-md-12\" style={{'display': 'inline-flex'}}>\r\n               <div className=\"logo-div col-md-6\" style={{'textAlign':'left'}}>\r\n                  <a href=\"/\">\r\n                     <h2><img src={graph_logo} width=\"60\" height=\"40\" />&nbsp;ALGO-TRADE</h2>\r\n                  </a>\r\n               </div>\r\n               <div className=\"user-action-btn col-md-6\" style={{'textAlign':'right'}}>\r\n                  <div className=\"icon-button\">\r\n                     <button onClick={props.openModal}>Register / LogIn</button>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </nav>\r\n         <div className=\"herosection\">\r\n            <div className=\"content\">\r\n               <div className=\"row mx-0 inner-content\">\r\n                  {/* <img src={backgroundimage} alt=\"background image\"/>\r\n                           <h2>BUY & SELL CRYPTO IN MINUTES</h2> */}\r\n                  <div className=\"col-lg-6 col-12\">\r\n                     <div className=\"Launch-btn-div\">\r\n                        {/* <h2>AlgoTRADE</h2> */}\r\n                        <p>\r\n                           AlgoTRADE offers a next-level order book with unparalleled\r\n                           feature-set and minimal fees powered by our Matic-Ethereum\r\n                           bi-directional bridge. View live charts, set limit orders,\r\n                           stop-loss orders and more. Trade synthetic stock derivatives,\r\n                           earn rewards as a liquidity provider, deploy automated trading\r\n                           bots governed by VeroxAI algorithm and experience the speed and\r\n                           consistency of our next-generation automated market maker.\r\n                           VeroxAI and AlgoTRADE is a complete ecosystem for cryptocurrency\r\n                           and synthetic asset management, analysis, investing and\r\n                           trading. \r\n                        </p>\r\n                     </div>\r\n                     {/* <div className=\"icon-button\">\r\n                           <button>Build Strategy</button>\r\n                     </div> */}\r\n                  </div>\r\n                  <div className=\"col-lg-6 col-12 herp-img\">\r\n                     <img src={chartImage} alt=\"chart-image\" />\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"detailsection\">\r\n            <div className=\"content\">\r\n               <div className=\"img2-div\">\r\n                  {/* <img src={backgroundimage} alt=\"graphline1\" className=\"img-fluid\" /> */}\r\n               </div>\r\n\r\n               <div className=\"row justify-content-md-center  py-5mx-0 details\">\r\n                  {\" \"}\r\n                  {/*features section*/}\r\n                  <div className=\"col-lg-12 col-12 p-0 crypto-sec\">\r\n                     <h2>Most advanced cryptocurrency decentralized exchange</h2>\r\n                     <p>Join the all-in-one DEX for crypto and synthetic assets.</p>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-12 col-md-6 px-xl-5 mt-5\">\r\n                     <div className=\"funds\">\r\n                     <div className=\"funds-content\">\r\n                        <div className=\"img-div\">\r\n                           <span>\r\n                           <img src={handicon} alt=\"hand icon\" className=\"img-fluid\" />\r\n                           </span>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                           <h1>Exchange</h1>\r\n                           <h3>Advanced Dashboard</h3>\r\n                           <p>\r\n                           Verox is on a mission to bring the most advanced trading\r\n                           toolkit to all users while staying true to what makes\r\n                           cryptocurrencies revolutionary. AlgoTRADE is non-custodial\r\n                           and decentralized which means maximum transparency,\r\n                           efficiency, stability, security and freedom. With AlgoTRADE\r\n                           we decentralize features that until now have either been\r\n                           centralized or non-existent. \r\n                           </p>\r\n                        </div>\r\n                     </div>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-12  col-md-6 px-xl-5 mt-5\">\r\n                     <div className=\"funds\">\r\n                     <div className=\"funds-content\">\r\n                        <div className=\"img-div\">\r\n                           <span>\r\n                           <img src={prices} alt=\"hand icon\" className=\"img-fluid\" />\r\n                           </span>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                           <h1>ELEVATE</h1>\r\n                           <h3>EXCLUSIVE FEATURES</h3>\r\n                           <p>\r\n                           AlgoTRADE empowers you with advanced features to have\r\n                           complete control and freedom with your crypto. Simply\r\n                           connect your wallet with the AlgoTRADE dashboard and exchange\r\n                           crypto and derivatives instantly with minimal fees, set\r\n                           orders and do with your assets what you can’t anywhere\r\n                           else. \r\n                           </p>\r\n                        </div>\r\n                     </div>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-12  col-md-6 px-xl-5 mt-5\">\r\n                     <div className=\"funds\">\r\n                     <div className=\"funds-content\">\r\n                        <div className=\"img-div\">\r\n                           <span>\r\n                           <img src={wallet} alt=\"hand icon\" className=\"img-fluid\" />\r\n                           </span>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                           <h1>EARN</h1>\r\n                           <h3>Earn Rewards</h3>\r\n                           <p>\r\n                           Supply liquidity and earn VRX, with high utility and even\r\n                           higher scarcity. Participate in liquidity pools, earn\r\n                           rewards and use your VRX to pay for VeroxAI app or stake for\r\n                           18% APY.\r\n                           </p>\r\n                        </div>\r\n                     </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n\r\n      </div>\r\n\r\n   );\r\n}\r\nexport default Landingpage;","import React, { Component } from 'react';\r\n\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  MenuItem,\r\n  NavItem,\r\n  Nav,\r\n  Popover,\r\n  Tooltip,\r\n  Button,\r\n  Modal,\r\n  OverlayTrigger\r\n} from 'react-bootstrap';\r\n\r\nclass CreateNewAccount extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          <form className=\"form-horizontal form-loanable\">\r\n            <div className=\"alert alert-danger alert-sm\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n              <span className=\"fw-semi-bold\">Error:</span> Login failed.\r\n              </div>\r\n            <fieldset>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-email\" className=\"col-sm-5\">Username or email</label>\r\n                <div className=\"col-sm-7\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"login-email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter username or email\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                { /* console.log('error email ::: ' + JSON.stringify(errors)) */}\r\n              </div>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-password\" className=\"col-sm-5\">Password</label>\r\n                <div className=\"col-sm-7\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <div className=\"login-password-wrapper\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"login-password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"*****\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"form-action\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-left\">Enter <span className=\"icon-arrow-right2 outlined\"></span></button>\r\n\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n        <a\r\n          href=\"#\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            this.setMode(\"login\");\r\n          }}\r\n        >\r\n          Log in here\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateNewAccount;","\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  MenuItem,\r\n  NavItem,\r\n  Nav,\r\n  Popover,\r\n  Tooltip,\r\n  Button,\r\n  Modal,\r\n  OverlayTrigger\r\n} from \"react-bootstrap\";\r\n\r\nimport CreateNewAccount from \"./CreateNewAccount\";\r\nimport { login, register } from \"../../utils/JWTAuth\";\r\n\r\nfunction LoginForm (props) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [smShow, setSmShow] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [cpassword, setCPassword] = useState('');\r\n  const [mode, setMode] = useState('login');\r\n  const [equalMsg, setEqualMsg] = useState('');\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [fname, setFname] = useState('');\r\n  const [lname, setLname] = useState('');\r\n\r\n  const sign_in = async () => {\r\n    if(email == '' || password == '') {\r\n      setErrMsg(\"Please type in all fields\");\r\n      return;\r\n    }\r\n   \r\n    let info = {\r\n      email: email,\r\n      password: password\r\n    };\r\n    let result = await login(info);\r\n    console.log(result);\r\n    \r\n    // if (result.success == 1) {\r\n    //   setErrMsg('');\r\n    //   setShowModal(false);\r\n    // //  redirect to the main page.\r\n    // } else {\r\n    //   setErrMsg(\"login failed\");\r\n    // }\r\n  }\r\n\r\n  const sign_up = async () => {\r\n    if (fname == '' || lname == '' || email == '' || password == '') {\r\n      setErrMsg(\"Please Type Every Fields\");\r\n      return;\r\n    }\r\n    if (equalMsg != '' || errMsg != '') {\r\n      return\r\n    }\r\n    let info = {\r\n      first_name: fname,\r\n      last_name:  lname,\r\n      email:      email,\r\n      password:   password\r\n    };\r\n    let result = await register(info);\r\n    console.log(result);\r\n    \r\n    if (result.success == 1) {\r\n      setErrMsg('');\r\n      setMode('login');\r\n      \r\n    } else {\r\n      setErrMsg(\"Sign up failed\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    compare_password();\r\n  },[cpassword, password])\r\n\r\n  const compare_password = () => {\r\n    if (password != cpassword) {setEqualMsg('Need to confirm Password'); }\r\n    else if (password === cpassword) {setEqualMsg(''); }\r\n  }\r\n\r\n  const renderForgot = () => {\r\n    return(\r\n      <div>\r\n        <p>inside of forgot! :) </p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={email}\r\n          id=\"login-email\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter email to reset password\"\r\n          onChange={(e)=>{setEmail(e.target.value)}}\r\n        />\r\n        <a\r\n          href=\"#\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setMode(\"login\");\r\n          }}\r\n        >\r\n          Back to login\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderRegister = () => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <form className=\"form-horizontal form-loanable\">\r\n        {errMsg!=''?\r\n            <div className=\"alert alert-danger alert-sm\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n              <span className=\"fw-semi-bold\">{errMsg}</span>\r\n            </div>\r\n        :null}\r\n            <fieldset>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"reg-fname\" className=\"col-sm-5\">First Name</label>\r\n                <div className=\"\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"fname\"\r\n                    value={fname}\r\n                    id=\"reg-fname\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"First name\"\r\n                    onChange={(e)=>{setFname(e.target.value)}}\r\n                  />\r\n                </div>\r\n              </div>\r\n                \r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"reg-lname\" className=\"col-sm-5\">Last Name</label>\r\n                <div className=\"\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lname\"\r\n                    value={lname}\r\n                    id=\"reg-lname\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Last name\"\r\n                    onChange={(e)=>{setLname(e.target.value)}}\r\n                  />\r\n                </div>\r\n              </div>\r\n                \r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"reg-email\" className=\"col-sm-5\">Email address</label>\r\n                <div className=\"\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    id=\"reg-email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter email address\"\r\n                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"reg-password\" className=\"col-sm-5\">Password</label>\r\n                <div className=\"\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <div className=\"login-password-wrapper\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      id=\"reg-password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"********\"\r\n                      required\r\n                      onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        {equalMsg!=''?\r\n            <div className=\"alert alert-danger alert-sm\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n              <span className=\"fw-semi-bold\">{equalMsg}</span>\r\n            </div>\r\n        :null}\r\n\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"reg-cpassword\" className=\"col-sm-5\">Confirm Password</label>\r\n                <div className=\"\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <div className=\"login-password-wrapper\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"cpassword\"\r\n                      value={cpassword}\r\n                      id=\"reg-cpassword\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"********\"\r\n                      required\r\n                      onChange={(e)=>{setCPassword(e.target.value)}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        {equalMsg!=''?\r\n            <div className=\"alert alert-danger alert-sm\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n              <span className=\"fw-semi-bold\">{equalMsg}</span>\r\n            </div>\r\n        :null}\r\n            \r\n\r\n            </fieldset>\r\n            {/* <div className=\"form-action\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-left\">Enter <span className=\"icon-arrow-right2 outlined\"></span></button>\r\n            </div> */}\r\n          </form>\r\n        \r\n        </div>\r\n        <a\r\n          href=\"#\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setMode(\"login\");\r\n          }}\r\n        >\r\n          Log in here\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderLogin = () => {\r\n    return (\r\n      <div>\r\n          <form className=\"form-horizontal form-loanable\">\r\n          {errMsg!=''?\r\n            <div className=\"alert alert-danger alert-sm\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n              <span className=\"fw-semi-bold\">{errMsg}</span>\r\n            </div>\r\n          :null}\r\n            <fieldset>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-email\" className=\"col-sm-4\">Email address</label>\r\n                <div className=\"\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"login-email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter email address\"\r\n                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                    value={email}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-password\" className=\"col-sm-5\">Password</label>\r\n                <div className=\"\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <div className=\"login-password-wrapper\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      id=\"login-password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"********\"\r\n                      required\r\n                      onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    <a\r\n                      href=\"#\"\r\n                      onClick={e => {\r\n                        e.preventDefault();\r\n                        setMode(\"forgot\");\r\n                      }}\r\n                    >\r\n                      Forgot Password\r\n                     </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            {/* <div className=\"form-action\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-left\">Enter <span className=\"icon-arrow-right2 outlined\"></span></button>\r\n            </div> */}\r\n          </form>\r\n       <a\r\n          href=\"#\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setMode(\"register\");\r\n          }}\r\n        >\r\n        Create your account\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Modal\r\n          show={props.showModal}\r\n          onHide={props.onClose}\r\n          onSubmit={mode==='login'?sign_in:sign_up}\r\n          // bsSize=\"large\"\r\n        >\r\n          <Modal.Header>\r\n            <h2 style={{'textAlign':'center'}}>{ mode === \"login\" ? \"Login\" : mode === \"register\" ? \"Register\" : \"Forgot Password\" }</h2>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {mode === \"login\" ? (renderLogin()) : mode === \"register\" ? (renderRegister()) : (renderForgot())}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"btn btn-primary\" onClick={mode=='login'?sign_in:sign_up}>Enter</Button>\r\n            <Button className=\"btn btn-secondary\"onClick={props.onClose}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, {createElement, useState, Component} from 'react';\r\n// import './App.css';\r\n\r\nimport Build_strategy from './components/build_strategy.js';\r\n\r\nimport { login, register, logout } from \"./utils/JWTAuth.js\";\r\nimport Landingpage from './components/dashboard/Landingpage';\r\nimport LoginForm from './components/signing/LoginForm.js';\r\nimport CreateNewAccount from './components/signing/CreateNewAccount.js';\r\nimport {\r\n    Navbar,\r\n    NavDropdown,\r\n    MenuItem,\r\n    NavItem,\r\n    Nav,\r\n    Popover,\r\n    Tooltip,\r\n    Button,\r\n    Modal,\r\n    OverlayTrigger\r\n  } from 'react-bootstrap';\r\n\r\n  function App() {\r\n\r\n    const styles = {\r\n        fontFamily: 'sans-serif',\r\n        textAlign: 'center',\r\n    };\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [form, setForm] = useState('');\r\n\r\n    const close = () => {\r\n        setShowModal(false);\r\n    }\r\n\r\n    const open = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapper d-flex align-items-stretch\" style={styles}>\r\n        <Landingpage \r\n            openModal={open}\r\n        />\r\n        {/* <Build_strategy /> */}\r\n        <LoginForm showModal={showModal} onClose = {close} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\n// import './assets/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <RecoilRoot>\r\n            <App />\r\n        </RecoilRoot>\r\n    </React.StrictMode>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/chart.bf8f4baf.png\";","module.exports = __webpack_public_path__ + \"static/media/market trickks-01.b63a2e56.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand icon.4a0ac855.svg\";","module.exports = __webpack_public_path__ + \"static/media/prices.cff1ae14.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.09482fca.svg\";"],"sourceRoot":""}